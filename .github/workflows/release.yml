name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_bundles:
    name: Build wheel bundles (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Build wheelhouse for current OS/Python
        run: |
          python - << 'PY'
          import os, subprocess, sys, shutil
          wheelhouse = 'wheelhouse'
          os.makedirs(wheelhouse, exist_ok=True)
          # Download package wheel + runtime deps for this platform without installing
          # This evaluates environment markers per platform/py version.
          subprocess.check_call([
              sys.executable, '-m', 'pip', 'download', '--dest', wheelhouse, '.'
          ])
          # Create a zip bundle named with OS and Python version
          os_name = os.environ.get('RUNNER_OS', 'unknown').lower()
          pyver = f"py{sys.version_info.major}.{sys.version_info.minor}"
          base = f"wheels-{os_name}-{pyver}"
          archive = shutil.make_archive(base, 'zip', wheelhouse)
          print('Created', archive)
          PY

      - name: Upload bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-py${{ matrix.python-version }}
          path: wheels-*.zip

  release:
    name: Create GitHub Release and attach bundles
    needs: [build_bundles]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all bundle artifacts
        uses: actions/download-artifact@v4
        with:
          path: bundles

      - name: List downloaded bundles
        run: |
          ls -R bundles || true

      - name: Create Release with autogenerated notes and upload bundles
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            bundles/**/wheels-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


